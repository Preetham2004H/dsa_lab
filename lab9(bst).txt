#include <stdio.h>
#include <stdlib.h>

typedef struct node {
    int info;
    struct node* l;
    struct node* r;
} *Node;

Node getnode() {
    Node x;
    x = (Node)malloc(sizeof(struct node));
    if (x == NULL) {
        printf("Malloc fails");
        exit(0);
    }
    return x;
}

Node creat(int item, Node root) {
    Node cur, temp, prev;
    temp = getnode();
    temp->info = item;
    temp->r = temp->l = NULL;
    if (root == NULL)
        return temp;

    cur = root;
    prev = NULL;
    while (cur != NULL) {
        prev = cur;
        cur = ((item > cur->info) ? cur->r : cur->l);
    }
    if (prev == NULL) {
        root = temp;
    } else if (item < prev->info) {
        prev->l = temp;
    } else {
        prev->r = temp;
    }
    return root;
}

void inorder(Node root) {
    if (root != NULL) {
        inorder(root->l);
        printf("%d\t", root->info);
        inorder(root->r);
    }
}

void preorder(Node root) {
    if (root != NULL) {
        printf("%d\t", root->info);
        preorder(root->l);
        preorder(root->r);
    }
}

void postorder(Node root) {
    if (root != NULL) {
        postorder(root->l);
        postorder(root->r);
        printf("%d\t", root->info);
    }
}

int main() {
    Node root = NULL;
    int ch, item;
    for (;;) {
        printf("Enter the choice: 1 create, 2 inorder, 3 postorder, 4 preorder, 5 exit\n");
        scanf("%d", &ch);
        switch (ch) {
            case 1:
                printf("Enter the item: ");
                scanf("%d", &item);
                root = creat(item, root);
                break;
            case 2:
                inorder(root);
                printf("\n");
                break;
            case 3:
                postorder(root);
                printf("\n");
                break;
            case 4:
                preorder(root);
                printf("\n");
                break;
            case 5:
                exit(0);
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
